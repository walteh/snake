// Code generated by go generate; DO NOT EDIT.
package snake

type genRunCommand_In00_Out01 interface { NamedMethod; Run () error }
func GenRunCommand_In00_Out01[L genRunCommand_In00_Out01](l L) TypedNamedRunner[L] { return &namedrund[L]{&rund[L]{l}} }

type genRunCommand_In00_Out02 interface { NamedMethod; Run () (Output, error) }
func GenRunCommand_In00_Out02[L genRunCommand_In00_Out02](l L) TypedNamedRunner[L] { return &namedrund[L]{&rund[L]{l}} }

type genRunCommand_In01_Out01[X1 any] interface { NamedMethod; Run (X1) error }
func GenRunCommand_In01_Out01[X1 any, L genRunCommand_In01_Out01[X1]](l L) TypedNamedRunner[L] { return &namedrund[L]{&rund[L]{l}} }

type genRunCommand_In01_Out02[X1 any] interface { NamedMethod; Run (X1) (Output, error) }
func GenRunCommand_In01_Out02[X1 any, L genRunCommand_In01_Out02[X1]](l L) TypedNamedRunner[L] { return &namedrund[L]{&rund[L]{l}} }

type genRunCommand_In02_Out01[X1 any, X2 any] interface { NamedMethod; Run (X1, X2) error }
func GenRunCommand_In02_Out01[X1 any, X2 any, L genRunCommand_In02_Out01[X1, X2]](l L) TypedNamedRunner[L] { return &namedrund[L]{&rund[L]{l}} }

type genRunCommand_In02_Out02[X1 any, X2 any] interface { NamedMethod; Run (X1, X2) (Output, error) }
func GenRunCommand_In02_Out02[X1 any, X2 any, L genRunCommand_In02_Out02[X1, X2]](l L) TypedNamedRunner[L] { return &namedrund[L]{&rund[L]{l}} }

type genRunCommand_In03_Out01[X1 any, X2 any, X3 any] interface { NamedMethod; Run (X1, X2, X3) error }
func GenRunCommand_In03_Out01[X1 any, X2 any, X3 any, L genRunCommand_In03_Out01[X1, X2, X3]](l L) TypedNamedRunner[L] { return &namedrund[L]{&rund[L]{l}} }

type genRunCommand_In03_Out02[X1 any, X2 any, X3 any] interface { NamedMethod; Run (X1, X2, X3) (Output, error) }
func GenRunCommand_In03_Out02[X1 any, X2 any, X3 any, L genRunCommand_In03_Out02[X1, X2, X3]](l L) TypedNamedRunner[L] { return &namedrund[L]{&rund[L]{l}} }

type genRunCommand_In04_Out01[X1 any, X2 any, X3 any, X4 any] interface { NamedMethod; Run (X1, X2, X3, X4) error }
func GenRunCommand_In04_Out01[X1 any, X2 any, X3 any, X4 any, L genRunCommand_In04_Out01[X1, X2, X3, X4]](l L) TypedNamedRunner[L] { return &namedrund[L]{&rund[L]{l}} }

type genRunCommand_In04_Out02[X1 any, X2 any, X3 any, X4 any] interface { NamedMethod; Run (X1, X2, X3, X4) (Output, error) }
func GenRunCommand_In04_Out02[X1 any, X2 any, X3 any, X4 any, L genRunCommand_In04_Out02[X1, X2, X3, X4]](l L) TypedNamedRunner[L] { return &namedrund[L]{&rund[L]{l}} }

type genRunCommand_In05_Out01[X1 any, X2 any, X3 any, X4 any, X5 any] interface { NamedMethod; Run (X1, X2, X3, X4, X5) error }
func GenRunCommand_In05_Out01[X1 any, X2 any, X3 any, X4 any, X5 any, L genRunCommand_In05_Out01[X1, X2, X3, X4, X5]](l L) TypedNamedRunner[L] { return &namedrund[L]{&rund[L]{l}} }

type genRunCommand_In05_Out02[X1 any, X2 any, X3 any, X4 any, X5 any] interface { NamedMethod; Run (X1, X2, X3, X4, X5) (Output, error) }
func GenRunCommand_In05_Out02[X1 any, X2 any, X3 any, X4 any, X5 any, L genRunCommand_In05_Out02[X1, X2, X3, X4, X5]](l L) TypedNamedRunner[L] { return &namedrund[L]{&rund[L]{l}} }

type genRunCommand_In06_Out01[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any] interface { NamedMethod; Run (X1, X2, X3, X4, X5, X6) error }
func GenRunCommand_In06_Out01[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, L genRunCommand_In06_Out01[X1, X2, X3, X4, X5, X6]](l L) TypedNamedRunner[L] { return &namedrund[L]{&rund[L]{l}} }

type genRunCommand_In06_Out02[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any] interface { NamedMethod; Run (X1, X2, X3, X4, X5, X6) (Output, error) }
func GenRunCommand_In06_Out02[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, L genRunCommand_In06_Out02[X1, X2, X3, X4, X5, X6]](l L) TypedNamedRunner[L] { return &namedrund[L]{&rund[L]{l}} }

type genRunCommand_In07_Out01[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, X7 any] interface { NamedMethod; Run (X1, X2, X3, X4, X5, X6, X7) error }
func GenRunCommand_In07_Out01[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, X7 any, L genRunCommand_In07_Out01[X1, X2, X3, X4, X5, X6, X7]](l L) TypedNamedRunner[L] { return &namedrund[L]{&rund[L]{l}} }

type genRunCommand_In07_Out02[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, X7 any] interface { NamedMethod; Run (X1, X2, X3, X4, X5, X6, X7) (Output, error) }
func GenRunCommand_In07_Out02[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, X7 any, L genRunCommand_In07_Out02[X1, X2, X3, X4, X5, X6, X7]](l L) TypedNamedRunner[L] { return &namedrund[L]{&rund[L]{l}} }

type genRunCommand_In08_Out01[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, X7 any, X8 any] interface { NamedMethod; Run (X1, X2, X3, X4, X5, X6, X7, X8) error }
func GenRunCommand_In08_Out01[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, X7 any, X8 any, L genRunCommand_In08_Out01[X1, X2, X3, X4, X5, X6, X7, X8]](l L) TypedNamedRunner[L] { return &namedrund[L]{&rund[L]{l}} }

type genRunCommand_In08_Out02[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, X7 any, X8 any] interface { NamedMethod; Run (X1, X2, X3, X4, X5, X6, X7, X8) (Output, error) }
func GenRunCommand_In08_Out02[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, X7 any, X8 any, L genRunCommand_In08_Out02[X1, X2, X3, X4, X5, X6, X7, X8]](l L) TypedNamedRunner[L] { return &namedrund[L]{&rund[L]{l}} }

type genRunCommand_In09_Out01[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, X7 any, X8 any, X9 any] interface { NamedMethod; Run (X1, X2, X3, X4, X5, X6, X7, X8, X9) error }
func GenRunCommand_In09_Out01[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, X7 any, X8 any, X9 any, L genRunCommand_In09_Out01[X1, X2, X3, X4, X5, X6, X7, X8, X9]](l L) TypedNamedRunner[L] { return &namedrund[L]{&rund[L]{l}} }

type genRunCommand_In09_Out02[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, X7 any, X8 any, X9 any] interface { NamedMethod; Run (X1, X2, X3, X4, X5, X6, X7, X8, X9) (Output, error) }
func GenRunCommand_In09_Out02[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, X7 any, X8 any, X9 any, L genRunCommand_In09_Out02[X1, X2, X3, X4, X5, X6, X7, X8, X9]](l L) TypedNamedRunner[L] { return &namedrund[L]{&rund[L]{l}} }

type genRunCommand_In10_Out01[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, X7 any, X8 any, X9 any, X10 any] interface { NamedMethod; Run (X1, X2, X3, X4, X5, X6, X7, X8, X9, X10) error }
func GenRunCommand_In10_Out01[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, X7 any, X8 any, X9 any, X10 any, L genRunCommand_In10_Out01[X1, X2, X3, X4, X5, X6, X7, X8, X9, X10]](l L) TypedNamedRunner[L] { return &namedrund[L]{&rund[L]{l}} }

type genRunCommand_In10_Out02[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, X7 any, X8 any, X9 any, X10 any] interface { NamedMethod; Run (X1, X2, X3, X4, X5, X6, X7, X8, X9, X10) (Output, error) }
func GenRunCommand_In10_Out02[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, X7 any, X8 any, X9 any, X10 any, L genRunCommand_In10_Out02[X1, X2, X3, X4, X5, X6, X7, X8, X9, X10]](l L) TypedNamedRunner[L] { return &namedrund[L]{&rund[L]{l}} }

type genRunResolver_In00_Out01 interface { Run () (error) }
func GenRunResolver_In00_Out01[L genRunResolver_In00_Out01](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In00_Out02[Y1 any] interface { Run () (Y1, error) }
func GenRunResolver_In00_Out02[Y1 any, L genRunResolver_In00_Out02[Y1]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In00_Out03[Y1 any, Y2 any] interface { Run () (Y1, Y2, error) }
func GenRunResolver_In00_Out03[Y1 any, Y2 any, L genRunResolver_In00_Out03[Y1, Y2]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In00_Out04[Y1 any, Y2 any, Y3 any] interface { Run () (Y1, Y2, Y3, error) }
func GenRunResolver_In00_Out04[Y1 any, Y2 any, Y3 any, L genRunResolver_In00_Out04[Y1, Y2, Y3]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In00_Out05[Y1 any, Y2 any, Y3 any, Y4 any] interface { Run () (Y1, Y2, Y3, Y4, error) }
func GenRunResolver_In00_Out05[Y1 any, Y2 any, Y3 any, Y4 any, L genRunResolver_In00_Out05[Y1, Y2, Y3, Y4]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In00_Out06[Y1 any, Y2 any, Y3 any, Y4 any, Y5 any] interface { Run () (Y1, Y2, Y3, Y4, Y5, error) }
func GenRunResolver_In00_Out06[Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, L genRunResolver_In00_Out06[Y1, Y2, Y3, Y4, Y5]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In00_Out07[Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, Y6 any] interface { Run () (Y1, Y2, Y3, Y4, Y5, Y6, error) }
func GenRunResolver_In00_Out07[Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, Y6 any, L genRunResolver_In00_Out07[Y1, Y2, Y3, Y4, Y5, Y6]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In00_Out08[Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, Y6 any, Y7 any] interface { Run () (Y1, Y2, Y3, Y4, Y5, Y6, Y7, error) }
func GenRunResolver_In00_Out08[Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, Y6 any, Y7 any, L genRunResolver_In00_Out08[Y1, Y2, Y3, Y4, Y5, Y6, Y7]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In00_Out09[Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, Y6 any, Y7 any, Y8 any] interface { Run () (Y1, Y2, Y3, Y4, Y5, Y6, Y7, Y8, error) }
func GenRunResolver_In00_Out09[Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, Y6 any, Y7 any, Y8 any, L genRunResolver_In00_Out09[Y1, Y2, Y3, Y4, Y5, Y6, Y7, Y8]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In00_Out10[Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, Y6 any, Y7 any, Y8 any, Y9 any] interface { Run () (Y1, Y2, Y3, Y4, Y5, Y6, Y7, Y8, Y9, error) }
func GenRunResolver_In00_Out10[Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, Y6 any, Y7 any, Y8 any, Y9 any, L genRunResolver_In00_Out10[Y1, Y2, Y3, Y4, Y5, Y6, Y7, Y8, Y9]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In00_Out11[Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, Y6 any, Y7 any, Y8 any, Y9 any, Y10 any] interface { Run () (Y1, Y2, Y3, Y4, Y5, Y6, Y7, Y8, Y9, Y10, error) }
func GenRunResolver_In00_Out11[Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, Y6 any, Y7 any, Y8 any, Y9 any, Y10 any, L genRunResolver_In00_Out11[Y1, Y2, Y3, Y4, Y5, Y6, Y7, Y8, Y9, Y10]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In01_Out01[X1 any] interface { Run (X1) (error) }
func GenRunResolver_In01_Out01[X1 any, L genRunResolver_In01_Out01[X1]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In01_Out02[X1 any, Y1 any] interface { Run (X1) (Y1, error) }
func GenRunResolver_In01_Out02[X1 any, Y1 any, L genRunResolver_In01_Out02[X1, Y1]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In01_Out03[X1 any, Y1 any, Y2 any] interface { Run (X1) (Y1, Y2, error) }
func GenRunResolver_In01_Out03[X1 any, Y1 any, Y2 any, L genRunResolver_In01_Out03[X1, Y1, Y2]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In01_Out04[X1 any, Y1 any, Y2 any, Y3 any] interface { Run (X1) (Y1, Y2, Y3, error) }
func GenRunResolver_In01_Out04[X1 any, Y1 any, Y2 any, Y3 any, L genRunResolver_In01_Out04[X1, Y1, Y2, Y3]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In01_Out05[X1 any, Y1 any, Y2 any, Y3 any, Y4 any] interface { Run (X1) (Y1, Y2, Y3, Y4, error) }
func GenRunResolver_In01_Out05[X1 any, Y1 any, Y2 any, Y3 any, Y4 any, L genRunResolver_In01_Out05[X1, Y1, Y2, Y3, Y4]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In01_Out06[X1 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any] interface { Run (X1) (Y1, Y2, Y3, Y4, Y5, error) }
func GenRunResolver_In01_Out06[X1 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, L genRunResolver_In01_Out06[X1, Y1, Y2, Y3, Y4, Y5]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In01_Out07[X1 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, Y6 any] interface { Run (X1) (Y1, Y2, Y3, Y4, Y5, Y6, error) }
func GenRunResolver_In01_Out07[X1 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, Y6 any, L genRunResolver_In01_Out07[X1, Y1, Y2, Y3, Y4, Y5, Y6]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In01_Out08[X1 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, Y6 any, Y7 any] interface { Run (X1) (Y1, Y2, Y3, Y4, Y5, Y6, Y7, error) }
func GenRunResolver_In01_Out08[X1 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, Y6 any, Y7 any, L genRunResolver_In01_Out08[X1, Y1, Y2, Y3, Y4, Y5, Y6, Y7]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In01_Out09[X1 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, Y6 any, Y7 any, Y8 any] interface { Run (X1) (Y1, Y2, Y3, Y4, Y5, Y6, Y7, Y8, error) }
func GenRunResolver_In01_Out09[X1 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, Y6 any, Y7 any, Y8 any, L genRunResolver_In01_Out09[X1, Y1, Y2, Y3, Y4, Y5, Y6, Y7, Y8]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In01_Out10[X1 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, Y6 any, Y7 any, Y8 any, Y9 any] interface { Run (X1) (Y1, Y2, Y3, Y4, Y5, Y6, Y7, Y8, Y9, error) }
func GenRunResolver_In01_Out10[X1 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, Y6 any, Y7 any, Y8 any, Y9 any, L genRunResolver_In01_Out10[X1, Y1, Y2, Y3, Y4, Y5, Y6, Y7, Y8, Y9]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In01_Out11[X1 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, Y6 any, Y7 any, Y8 any, Y9 any, Y10 any] interface { Run (X1) (Y1, Y2, Y3, Y4, Y5, Y6, Y7, Y8, Y9, Y10, error) }
func GenRunResolver_In01_Out11[X1 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, Y6 any, Y7 any, Y8 any, Y9 any, Y10 any, L genRunResolver_In01_Out11[X1, Y1, Y2, Y3, Y4, Y5, Y6, Y7, Y8, Y9, Y10]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In02_Out01[X1 any, X2 any] interface { Run (X1, X2) (error) }
func GenRunResolver_In02_Out01[X1 any, X2 any, L genRunResolver_In02_Out01[X1, X2]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In02_Out02[X1 any, X2 any, Y1 any] interface { Run (X1, X2) (Y1, error) }
func GenRunResolver_In02_Out02[X1 any, X2 any, Y1 any, L genRunResolver_In02_Out02[X1, X2, Y1]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In02_Out03[X1 any, X2 any, Y1 any, Y2 any] interface { Run (X1, X2) (Y1, Y2, error) }
func GenRunResolver_In02_Out03[X1 any, X2 any, Y1 any, Y2 any, L genRunResolver_In02_Out03[X1, X2, Y1, Y2]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In02_Out04[X1 any, X2 any, Y1 any, Y2 any, Y3 any] interface { Run (X1, X2) (Y1, Y2, Y3, error) }
func GenRunResolver_In02_Out04[X1 any, X2 any, Y1 any, Y2 any, Y3 any, L genRunResolver_In02_Out04[X1, X2, Y1, Y2, Y3]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In02_Out05[X1 any, X2 any, Y1 any, Y2 any, Y3 any, Y4 any] interface { Run (X1, X2) (Y1, Y2, Y3, Y4, error) }
func GenRunResolver_In02_Out05[X1 any, X2 any, Y1 any, Y2 any, Y3 any, Y4 any, L genRunResolver_In02_Out05[X1, X2, Y1, Y2, Y3, Y4]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In02_Out06[X1 any, X2 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any] interface { Run (X1, X2) (Y1, Y2, Y3, Y4, Y5, error) }
func GenRunResolver_In02_Out06[X1 any, X2 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, L genRunResolver_In02_Out06[X1, X2, Y1, Y2, Y3, Y4, Y5]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In02_Out07[X1 any, X2 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, Y6 any] interface { Run (X1, X2) (Y1, Y2, Y3, Y4, Y5, Y6, error) }
func GenRunResolver_In02_Out07[X1 any, X2 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, Y6 any, L genRunResolver_In02_Out07[X1, X2, Y1, Y2, Y3, Y4, Y5, Y6]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In02_Out08[X1 any, X2 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, Y6 any, Y7 any] interface { Run (X1, X2) (Y1, Y2, Y3, Y4, Y5, Y6, Y7, error) }
func GenRunResolver_In02_Out08[X1 any, X2 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, Y6 any, Y7 any, L genRunResolver_In02_Out08[X1, X2, Y1, Y2, Y3, Y4, Y5, Y6, Y7]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In02_Out09[X1 any, X2 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, Y6 any, Y7 any, Y8 any] interface { Run (X1, X2) (Y1, Y2, Y3, Y4, Y5, Y6, Y7, Y8, error) }
func GenRunResolver_In02_Out09[X1 any, X2 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, Y6 any, Y7 any, Y8 any, L genRunResolver_In02_Out09[X1, X2, Y1, Y2, Y3, Y4, Y5, Y6, Y7, Y8]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In02_Out10[X1 any, X2 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, Y6 any, Y7 any, Y8 any, Y9 any] interface { Run (X1, X2) (Y1, Y2, Y3, Y4, Y5, Y6, Y7, Y8, Y9, error) }
func GenRunResolver_In02_Out10[X1 any, X2 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, Y6 any, Y7 any, Y8 any, Y9 any, L genRunResolver_In02_Out10[X1, X2, Y1, Y2, Y3, Y4, Y5, Y6, Y7, Y8, Y9]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In02_Out11[X1 any, X2 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, Y6 any, Y7 any, Y8 any, Y9 any, Y10 any] interface { Run (X1, X2) (Y1, Y2, Y3, Y4, Y5, Y6, Y7, Y8, Y9, Y10, error) }
func GenRunResolver_In02_Out11[X1 any, X2 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, Y6 any, Y7 any, Y8 any, Y9 any, Y10 any, L genRunResolver_In02_Out11[X1, X2, Y1, Y2, Y3, Y4, Y5, Y6, Y7, Y8, Y9, Y10]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In03_Out01[X1 any, X2 any, X3 any] interface { Run (X1, X2, X3) (error) }
func GenRunResolver_In03_Out01[X1 any, X2 any, X3 any, L genRunResolver_In03_Out01[X1, X2, X3]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In03_Out02[X1 any, X2 any, X3 any, Y1 any] interface { Run (X1, X2, X3) (Y1, error) }
func GenRunResolver_In03_Out02[X1 any, X2 any, X3 any, Y1 any, L genRunResolver_In03_Out02[X1, X2, X3, Y1]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In03_Out03[X1 any, X2 any, X3 any, Y1 any, Y2 any] interface { Run (X1, X2, X3) (Y1, Y2, error) }
func GenRunResolver_In03_Out03[X1 any, X2 any, X3 any, Y1 any, Y2 any, L genRunResolver_In03_Out03[X1, X2, X3, Y1, Y2]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In03_Out04[X1 any, X2 any, X3 any, Y1 any, Y2 any, Y3 any] interface { Run (X1, X2, X3) (Y1, Y2, Y3, error) }
func GenRunResolver_In03_Out04[X1 any, X2 any, X3 any, Y1 any, Y2 any, Y3 any, L genRunResolver_In03_Out04[X1, X2, X3, Y1, Y2, Y3]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In03_Out05[X1 any, X2 any, X3 any, Y1 any, Y2 any, Y3 any, Y4 any] interface { Run (X1, X2, X3) (Y1, Y2, Y3, Y4, error) }
func GenRunResolver_In03_Out05[X1 any, X2 any, X3 any, Y1 any, Y2 any, Y3 any, Y4 any, L genRunResolver_In03_Out05[X1, X2, X3, Y1, Y2, Y3, Y4]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In03_Out06[X1 any, X2 any, X3 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any] interface { Run (X1, X2, X3) (Y1, Y2, Y3, Y4, Y5, error) }
func GenRunResolver_In03_Out06[X1 any, X2 any, X3 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, L genRunResolver_In03_Out06[X1, X2, X3, Y1, Y2, Y3, Y4, Y5]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In03_Out07[X1 any, X2 any, X3 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, Y6 any] interface { Run (X1, X2, X3) (Y1, Y2, Y3, Y4, Y5, Y6, error) }
func GenRunResolver_In03_Out07[X1 any, X2 any, X3 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, Y6 any, L genRunResolver_In03_Out07[X1, X2, X3, Y1, Y2, Y3, Y4, Y5, Y6]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In03_Out08[X1 any, X2 any, X3 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, Y6 any, Y7 any] interface { Run (X1, X2, X3) (Y1, Y2, Y3, Y4, Y5, Y6, Y7, error) }
func GenRunResolver_In03_Out08[X1 any, X2 any, X3 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, Y6 any, Y7 any, L genRunResolver_In03_Out08[X1, X2, X3, Y1, Y2, Y3, Y4, Y5, Y6, Y7]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In03_Out09[X1 any, X2 any, X3 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, Y6 any, Y7 any, Y8 any] interface { Run (X1, X2, X3) (Y1, Y2, Y3, Y4, Y5, Y6, Y7, Y8, error) }
func GenRunResolver_In03_Out09[X1 any, X2 any, X3 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, Y6 any, Y7 any, Y8 any, L genRunResolver_In03_Out09[X1, X2, X3, Y1, Y2, Y3, Y4, Y5, Y6, Y7, Y8]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In03_Out10[X1 any, X2 any, X3 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, Y6 any, Y7 any, Y8 any, Y9 any] interface { Run (X1, X2, X3) (Y1, Y2, Y3, Y4, Y5, Y6, Y7, Y8, Y9, error) }
func GenRunResolver_In03_Out10[X1 any, X2 any, X3 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, Y6 any, Y7 any, Y8 any, Y9 any, L genRunResolver_In03_Out10[X1, X2, X3, Y1, Y2, Y3, Y4, Y5, Y6, Y7, Y8, Y9]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In03_Out11[X1 any, X2 any, X3 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, Y6 any, Y7 any, Y8 any, Y9 any, Y10 any] interface { Run (X1, X2, X3) (Y1, Y2, Y3, Y4, Y5, Y6, Y7, Y8, Y9, Y10, error) }
func GenRunResolver_In03_Out11[X1 any, X2 any, X3 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, Y6 any, Y7 any, Y8 any, Y9 any, Y10 any, L genRunResolver_In03_Out11[X1, X2, X3, Y1, Y2, Y3, Y4, Y5, Y6, Y7, Y8, Y9, Y10]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In04_Out01[X1 any, X2 any, X3 any, X4 any] interface { Run (X1, X2, X3, X4) (error) }
func GenRunResolver_In04_Out01[X1 any, X2 any, X3 any, X4 any, L genRunResolver_In04_Out01[X1, X2, X3, X4]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In04_Out02[X1 any, X2 any, X3 any, X4 any, Y1 any] interface { Run (X1, X2, X3, X4) (Y1, error) }
func GenRunResolver_In04_Out02[X1 any, X2 any, X3 any, X4 any, Y1 any, L genRunResolver_In04_Out02[X1, X2, X3, X4, Y1]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In04_Out03[X1 any, X2 any, X3 any, X4 any, Y1 any, Y2 any] interface { Run (X1, X2, X3, X4) (Y1, Y2, error) }
func GenRunResolver_In04_Out03[X1 any, X2 any, X3 any, X4 any, Y1 any, Y2 any, L genRunResolver_In04_Out03[X1, X2, X3, X4, Y1, Y2]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In04_Out04[X1 any, X2 any, X3 any, X4 any, Y1 any, Y2 any, Y3 any] interface { Run (X1, X2, X3, X4) (Y1, Y2, Y3, error) }
func GenRunResolver_In04_Out04[X1 any, X2 any, X3 any, X4 any, Y1 any, Y2 any, Y3 any, L genRunResolver_In04_Out04[X1, X2, X3, X4, Y1, Y2, Y3]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In04_Out05[X1 any, X2 any, X3 any, X4 any, Y1 any, Y2 any, Y3 any, Y4 any] interface { Run (X1, X2, X3, X4) (Y1, Y2, Y3, Y4, error) }
func GenRunResolver_In04_Out05[X1 any, X2 any, X3 any, X4 any, Y1 any, Y2 any, Y3 any, Y4 any, L genRunResolver_In04_Out05[X1, X2, X3, X4, Y1, Y2, Y3, Y4]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In04_Out06[X1 any, X2 any, X3 any, X4 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any] interface { Run (X1, X2, X3, X4) (Y1, Y2, Y3, Y4, Y5, error) }
func GenRunResolver_In04_Out06[X1 any, X2 any, X3 any, X4 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, L genRunResolver_In04_Out06[X1, X2, X3, X4, Y1, Y2, Y3, Y4, Y5]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In04_Out07[X1 any, X2 any, X3 any, X4 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, Y6 any] interface { Run (X1, X2, X3, X4) (Y1, Y2, Y3, Y4, Y5, Y6, error) }
func GenRunResolver_In04_Out07[X1 any, X2 any, X3 any, X4 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, Y6 any, L genRunResolver_In04_Out07[X1, X2, X3, X4, Y1, Y2, Y3, Y4, Y5, Y6]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In04_Out08[X1 any, X2 any, X3 any, X4 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, Y6 any, Y7 any] interface { Run (X1, X2, X3, X4) (Y1, Y2, Y3, Y4, Y5, Y6, Y7, error) }
func GenRunResolver_In04_Out08[X1 any, X2 any, X3 any, X4 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, Y6 any, Y7 any, L genRunResolver_In04_Out08[X1, X2, X3, X4, Y1, Y2, Y3, Y4, Y5, Y6, Y7]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In04_Out09[X1 any, X2 any, X3 any, X4 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, Y6 any, Y7 any, Y8 any] interface { Run (X1, X2, X3, X4) (Y1, Y2, Y3, Y4, Y5, Y6, Y7, Y8, error) }
func GenRunResolver_In04_Out09[X1 any, X2 any, X3 any, X4 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, Y6 any, Y7 any, Y8 any, L genRunResolver_In04_Out09[X1, X2, X3, X4, Y1, Y2, Y3, Y4, Y5, Y6, Y7, Y8]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In04_Out10[X1 any, X2 any, X3 any, X4 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, Y6 any, Y7 any, Y8 any, Y9 any] interface { Run (X1, X2, X3, X4) (Y1, Y2, Y3, Y4, Y5, Y6, Y7, Y8, Y9, error) }
func GenRunResolver_In04_Out10[X1 any, X2 any, X3 any, X4 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, Y6 any, Y7 any, Y8 any, Y9 any, L genRunResolver_In04_Out10[X1, X2, X3, X4, Y1, Y2, Y3, Y4, Y5, Y6, Y7, Y8, Y9]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In04_Out11[X1 any, X2 any, X3 any, X4 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, Y6 any, Y7 any, Y8 any, Y9 any, Y10 any] interface { Run (X1, X2, X3, X4) (Y1, Y2, Y3, Y4, Y5, Y6, Y7, Y8, Y9, Y10, error) }
func GenRunResolver_In04_Out11[X1 any, X2 any, X3 any, X4 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, Y6 any, Y7 any, Y8 any, Y9 any, Y10 any, L genRunResolver_In04_Out11[X1, X2, X3, X4, Y1, Y2, Y3, Y4, Y5, Y6, Y7, Y8, Y9, Y10]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In05_Out01[X1 any, X2 any, X3 any, X4 any, X5 any] interface { Run (X1, X2, X3, X4, X5) (error) }
func GenRunResolver_In05_Out01[X1 any, X2 any, X3 any, X4 any, X5 any, L genRunResolver_In05_Out01[X1, X2, X3, X4, X5]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In05_Out02[X1 any, X2 any, X3 any, X4 any, X5 any, Y1 any] interface { Run (X1, X2, X3, X4, X5) (Y1, error) }
func GenRunResolver_In05_Out02[X1 any, X2 any, X3 any, X4 any, X5 any, Y1 any, L genRunResolver_In05_Out02[X1, X2, X3, X4, X5, Y1]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In05_Out03[X1 any, X2 any, X3 any, X4 any, X5 any, Y1 any, Y2 any] interface { Run (X1, X2, X3, X4, X5) (Y1, Y2, error) }
func GenRunResolver_In05_Out03[X1 any, X2 any, X3 any, X4 any, X5 any, Y1 any, Y2 any, L genRunResolver_In05_Out03[X1, X2, X3, X4, X5, Y1, Y2]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In05_Out04[X1 any, X2 any, X3 any, X4 any, X5 any, Y1 any, Y2 any, Y3 any] interface { Run (X1, X2, X3, X4, X5) (Y1, Y2, Y3, error) }
func GenRunResolver_In05_Out04[X1 any, X2 any, X3 any, X4 any, X5 any, Y1 any, Y2 any, Y3 any, L genRunResolver_In05_Out04[X1, X2, X3, X4, X5, Y1, Y2, Y3]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In05_Out05[X1 any, X2 any, X3 any, X4 any, X5 any, Y1 any, Y2 any, Y3 any, Y4 any] interface { Run (X1, X2, X3, X4, X5) (Y1, Y2, Y3, Y4, error) }
func GenRunResolver_In05_Out05[X1 any, X2 any, X3 any, X4 any, X5 any, Y1 any, Y2 any, Y3 any, Y4 any, L genRunResolver_In05_Out05[X1, X2, X3, X4, X5, Y1, Y2, Y3, Y4]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In05_Out06[X1 any, X2 any, X3 any, X4 any, X5 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any] interface { Run (X1, X2, X3, X4, X5) (Y1, Y2, Y3, Y4, Y5, error) }
func GenRunResolver_In05_Out06[X1 any, X2 any, X3 any, X4 any, X5 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, L genRunResolver_In05_Out06[X1, X2, X3, X4, X5, Y1, Y2, Y3, Y4, Y5]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In05_Out07[X1 any, X2 any, X3 any, X4 any, X5 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, Y6 any] interface { Run (X1, X2, X3, X4, X5) (Y1, Y2, Y3, Y4, Y5, Y6, error) }
func GenRunResolver_In05_Out07[X1 any, X2 any, X3 any, X4 any, X5 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, Y6 any, L genRunResolver_In05_Out07[X1, X2, X3, X4, X5, Y1, Y2, Y3, Y4, Y5, Y6]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In05_Out08[X1 any, X2 any, X3 any, X4 any, X5 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, Y6 any, Y7 any] interface { Run (X1, X2, X3, X4, X5) (Y1, Y2, Y3, Y4, Y5, Y6, Y7, error) }
func GenRunResolver_In05_Out08[X1 any, X2 any, X3 any, X4 any, X5 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, Y6 any, Y7 any, L genRunResolver_In05_Out08[X1, X2, X3, X4, X5, Y1, Y2, Y3, Y4, Y5, Y6, Y7]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In05_Out09[X1 any, X2 any, X3 any, X4 any, X5 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, Y6 any, Y7 any, Y8 any] interface { Run (X1, X2, X3, X4, X5) (Y1, Y2, Y3, Y4, Y5, Y6, Y7, Y8, error) }
func GenRunResolver_In05_Out09[X1 any, X2 any, X3 any, X4 any, X5 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, Y6 any, Y7 any, Y8 any, L genRunResolver_In05_Out09[X1, X2, X3, X4, X5, Y1, Y2, Y3, Y4, Y5, Y6, Y7, Y8]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In05_Out10[X1 any, X2 any, X3 any, X4 any, X5 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, Y6 any, Y7 any, Y8 any, Y9 any] interface { Run (X1, X2, X3, X4, X5) (Y1, Y2, Y3, Y4, Y5, Y6, Y7, Y8, Y9, error) }
func GenRunResolver_In05_Out10[X1 any, X2 any, X3 any, X4 any, X5 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, Y6 any, Y7 any, Y8 any, Y9 any, L genRunResolver_In05_Out10[X1, X2, X3, X4, X5, Y1, Y2, Y3, Y4, Y5, Y6, Y7, Y8, Y9]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In05_Out11[X1 any, X2 any, X3 any, X4 any, X5 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, Y6 any, Y7 any, Y8 any, Y9 any, Y10 any] interface { Run (X1, X2, X3, X4, X5) (Y1, Y2, Y3, Y4, Y5, Y6, Y7, Y8, Y9, Y10, error) }
func GenRunResolver_In05_Out11[X1 any, X2 any, X3 any, X4 any, X5 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, Y6 any, Y7 any, Y8 any, Y9 any, Y10 any, L genRunResolver_In05_Out11[X1, X2, X3, X4, X5, Y1, Y2, Y3, Y4, Y5, Y6, Y7, Y8, Y9, Y10]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In06_Out01[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any] interface { Run (X1, X2, X3, X4, X5, X6) (error) }
func GenRunResolver_In06_Out01[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, L genRunResolver_In06_Out01[X1, X2, X3, X4, X5, X6]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In06_Out02[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, Y1 any] interface { Run (X1, X2, X3, X4, X5, X6) (Y1, error) }
func GenRunResolver_In06_Out02[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, Y1 any, L genRunResolver_In06_Out02[X1, X2, X3, X4, X5, X6, Y1]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In06_Out03[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, Y1 any, Y2 any] interface { Run (X1, X2, X3, X4, X5, X6) (Y1, Y2, error) }
func GenRunResolver_In06_Out03[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, Y1 any, Y2 any, L genRunResolver_In06_Out03[X1, X2, X3, X4, X5, X6, Y1, Y2]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In06_Out04[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, Y1 any, Y2 any, Y3 any] interface { Run (X1, X2, X3, X4, X5, X6) (Y1, Y2, Y3, error) }
func GenRunResolver_In06_Out04[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, Y1 any, Y2 any, Y3 any, L genRunResolver_In06_Out04[X1, X2, X3, X4, X5, X6, Y1, Y2, Y3]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In06_Out05[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, Y1 any, Y2 any, Y3 any, Y4 any] interface { Run (X1, X2, X3, X4, X5, X6) (Y1, Y2, Y3, Y4, error) }
func GenRunResolver_In06_Out05[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, Y1 any, Y2 any, Y3 any, Y4 any, L genRunResolver_In06_Out05[X1, X2, X3, X4, X5, X6, Y1, Y2, Y3, Y4]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In06_Out06[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any] interface { Run (X1, X2, X3, X4, X5, X6) (Y1, Y2, Y3, Y4, Y5, error) }
func GenRunResolver_In06_Out06[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, L genRunResolver_In06_Out06[X1, X2, X3, X4, X5, X6, Y1, Y2, Y3, Y4, Y5]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In06_Out07[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, Y6 any] interface { Run (X1, X2, X3, X4, X5, X6) (Y1, Y2, Y3, Y4, Y5, Y6, error) }
func GenRunResolver_In06_Out07[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, Y6 any, L genRunResolver_In06_Out07[X1, X2, X3, X4, X5, X6, Y1, Y2, Y3, Y4, Y5, Y6]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In06_Out08[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, Y6 any, Y7 any] interface { Run (X1, X2, X3, X4, X5, X6) (Y1, Y2, Y3, Y4, Y5, Y6, Y7, error) }
func GenRunResolver_In06_Out08[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, Y6 any, Y7 any, L genRunResolver_In06_Out08[X1, X2, X3, X4, X5, X6, Y1, Y2, Y3, Y4, Y5, Y6, Y7]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In06_Out09[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, Y6 any, Y7 any, Y8 any] interface { Run (X1, X2, X3, X4, X5, X6) (Y1, Y2, Y3, Y4, Y5, Y6, Y7, Y8, error) }
func GenRunResolver_In06_Out09[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, Y6 any, Y7 any, Y8 any, L genRunResolver_In06_Out09[X1, X2, X3, X4, X5, X6, Y1, Y2, Y3, Y4, Y5, Y6, Y7, Y8]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In06_Out10[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, Y6 any, Y7 any, Y8 any, Y9 any] interface { Run (X1, X2, X3, X4, X5, X6) (Y1, Y2, Y3, Y4, Y5, Y6, Y7, Y8, Y9, error) }
func GenRunResolver_In06_Out10[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, Y6 any, Y7 any, Y8 any, Y9 any, L genRunResolver_In06_Out10[X1, X2, X3, X4, X5, X6, Y1, Y2, Y3, Y4, Y5, Y6, Y7, Y8, Y9]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In06_Out11[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, Y6 any, Y7 any, Y8 any, Y9 any, Y10 any] interface { Run (X1, X2, X3, X4, X5, X6) (Y1, Y2, Y3, Y4, Y5, Y6, Y7, Y8, Y9, Y10, error) }
func GenRunResolver_In06_Out11[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, Y6 any, Y7 any, Y8 any, Y9 any, Y10 any, L genRunResolver_In06_Out11[X1, X2, X3, X4, X5, X6, Y1, Y2, Y3, Y4, Y5, Y6, Y7, Y8, Y9, Y10]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In07_Out01[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, X7 any] interface { Run (X1, X2, X3, X4, X5, X6, X7) (error) }
func GenRunResolver_In07_Out01[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, X7 any, L genRunResolver_In07_Out01[X1, X2, X3, X4, X5, X6, X7]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In07_Out02[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, X7 any, Y1 any] interface { Run (X1, X2, X3, X4, X5, X6, X7) (Y1, error) }
func GenRunResolver_In07_Out02[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, X7 any, Y1 any, L genRunResolver_In07_Out02[X1, X2, X3, X4, X5, X6, X7, Y1]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In07_Out03[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, X7 any, Y1 any, Y2 any] interface { Run (X1, X2, X3, X4, X5, X6, X7) (Y1, Y2, error) }
func GenRunResolver_In07_Out03[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, X7 any, Y1 any, Y2 any, L genRunResolver_In07_Out03[X1, X2, X3, X4, X5, X6, X7, Y1, Y2]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In07_Out04[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, X7 any, Y1 any, Y2 any, Y3 any] interface { Run (X1, X2, X3, X4, X5, X6, X7) (Y1, Y2, Y3, error) }
func GenRunResolver_In07_Out04[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, X7 any, Y1 any, Y2 any, Y3 any, L genRunResolver_In07_Out04[X1, X2, X3, X4, X5, X6, X7, Y1, Y2, Y3]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In07_Out05[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, X7 any, Y1 any, Y2 any, Y3 any, Y4 any] interface { Run (X1, X2, X3, X4, X5, X6, X7) (Y1, Y2, Y3, Y4, error) }
func GenRunResolver_In07_Out05[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, X7 any, Y1 any, Y2 any, Y3 any, Y4 any, L genRunResolver_In07_Out05[X1, X2, X3, X4, X5, X6, X7, Y1, Y2, Y3, Y4]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In07_Out06[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, X7 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any] interface { Run (X1, X2, X3, X4, X5, X6, X7) (Y1, Y2, Y3, Y4, Y5, error) }
func GenRunResolver_In07_Out06[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, X7 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, L genRunResolver_In07_Out06[X1, X2, X3, X4, X5, X6, X7, Y1, Y2, Y3, Y4, Y5]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In07_Out07[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, X7 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, Y6 any] interface { Run (X1, X2, X3, X4, X5, X6, X7) (Y1, Y2, Y3, Y4, Y5, Y6, error) }
func GenRunResolver_In07_Out07[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, X7 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, Y6 any, L genRunResolver_In07_Out07[X1, X2, X3, X4, X5, X6, X7, Y1, Y2, Y3, Y4, Y5, Y6]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In07_Out08[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, X7 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, Y6 any, Y7 any] interface { Run (X1, X2, X3, X4, X5, X6, X7) (Y1, Y2, Y3, Y4, Y5, Y6, Y7, error) }
func GenRunResolver_In07_Out08[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, X7 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, Y6 any, Y7 any, L genRunResolver_In07_Out08[X1, X2, X3, X4, X5, X6, X7, Y1, Y2, Y3, Y4, Y5, Y6, Y7]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In07_Out09[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, X7 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, Y6 any, Y7 any, Y8 any] interface { Run (X1, X2, X3, X4, X5, X6, X7) (Y1, Y2, Y3, Y4, Y5, Y6, Y7, Y8, error) }
func GenRunResolver_In07_Out09[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, X7 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, Y6 any, Y7 any, Y8 any, L genRunResolver_In07_Out09[X1, X2, X3, X4, X5, X6, X7, Y1, Y2, Y3, Y4, Y5, Y6, Y7, Y8]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In07_Out10[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, X7 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, Y6 any, Y7 any, Y8 any, Y9 any] interface { Run (X1, X2, X3, X4, X5, X6, X7) (Y1, Y2, Y3, Y4, Y5, Y6, Y7, Y8, Y9, error) }
func GenRunResolver_In07_Out10[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, X7 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, Y6 any, Y7 any, Y8 any, Y9 any, L genRunResolver_In07_Out10[X1, X2, X3, X4, X5, X6, X7, Y1, Y2, Y3, Y4, Y5, Y6, Y7, Y8, Y9]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In07_Out11[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, X7 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, Y6 any, Y7 any, Y8 any, Y9 any, Y10 any] interface { Run (X1, X2, X3, X4, X5, X6, X7) (Y1, Y2, Y3, Y4, Y5, Y6, Y7, Y8, Y9, Y10, error) }
func GenRunResolver_In07_Out11[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, X7 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, Y6 any, Y7 any, Y8 any, Y9 any, Y10 any, L genRunResolver_In07_Out11[X1, X2, X3, X4, X5, X6, X7, Y1, Y2, Y3, Y4, Y5, Y6, Y7, Y8, Y9, Y10]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In08_Out01[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, X7 any, X8 any] interface { Run (X1, X2, X3, X4, X5, X6, X7, X8) (error) }
func GenRunResolver_In08_Out01[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, X7 any, X8 any, L genRunResolver_In08_Out01[X1, X2, X3, X4, X5, X6, X7, X8]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In08_Out02[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, X7 any, X8 any, Y1 any] interface { Run (X1, X2, X3, X4, X5, X6, X7, X8) (Y1, error) }
func GenRunResolver_In08_Out02[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, X7 any, X8 any, Y1 any, L genRunResolver_In08_Out02[X1, X2, X3, X4, X5, X6, X7, X8, Y1]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In08_Out03[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, X7 any, X8 any, Y1 any, Y2 any] interface { Run (X1, X2, X3, X4, X5, X6, X7, X8) (Y1, Y2, error) }
func GenRunResolver_In08_Out03[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, X7 any, X8 any, Y1 any, Y2 any, L genRunResolver_In08_Out03[X1, X2, X3, X4, X5, X6, X7, X8, Y1, Y2]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In08_Out04[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, X7 any, X8 any, Y1 any, Y2 any, Y3 any] interface { Run (X1, X2, X3, X4, X5, X6, X7, X8) (Y1, Y2, Y3, error) }
func GenRunResolver_In08_Out04[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, X7 any, X8 any, Y1 any, Y2 any, Y3 any, L genRunResolver_In08_Out04[X1, X2, X3, X4, X5, X6, X7, X8, Y1, Y2, Y3]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In08_Out05[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, X7 any, X8 any, Y1 any, Y2 any, Y3 any, Y4 any] interface { Run (X1, X2, X3, X4, X5, X6, X7, X8) (Y1, Y2, Y3, Y4, error) }
func GenRunResolver_In08_Out05[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, X7 any, X8 any, Y1 any, Y2 any, Y3 any, Y4 any, L genRunResolver_In08_Out05[X1, X2, X3, X4, X5, X6, X7, X8, Y1, Y2, Y3, Y4]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In08_Out06[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, X7 any, X8 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any] interface { Run (X1, X2, X3, X4, X5, X6, X7, X8) (Y1, Y2, Y3, Y4, Y5, error) }
func GenRunResolver_In08_Out06[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, X7 any, X8 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, L genRunResolver_In08_Out06[X1, X2, X3, X4, X5, X6, X7, X8, Y1, Y2, Y3, Y4, Y5]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In08_Out07[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, X7 any, X8 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, Y6 any] interface { Run (X1, X2, X3, X4, X5, X6, X7, X8) (Y1, Y2, Y3, Y4, Y5, Y6, error) }
func GenRunResolver_In08_Out07[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, X7 any, X8 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, Y6 any, L genRunResolver_In08_Out07[X1, X2, X3, X4, X5, X6, X7, X8, Y1, Y2, Y3, Y4, Y5, Y6]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In08_Out08[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, X7 any, X8 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, Y6 any, Y7 any] interface { Run (X1, X2, X3, X4, X5, X6, X7, X8) (Y1, Y2, Y3, Y4, Y5, Y6, Y7, error) }
func GenRunResolver_In08_Out08[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, X7 any, X8 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, Y6 any, Y7 any, L genRunResolver_In08_Out08[X1, X2, X3, X4, X5, X6, X7, X8, Y1, Y2, Y3, Y4, Y5, Y6, Y7]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In08_Out09[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, X7 any, X8 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, Y6 any, Y7 any, Y8 any] interface { Run (X1, X2, X3, X4, X5, X6, X7, X8) (Y1, Y2, Y3, Y4, Y5, Y6, Y7, Y8, error) }
func GenRunResolver_In08_Out09[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, X7 any, X8 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, Y6 any, Y7 any, Y8 any, L genRunResolver_In08_Out09[X1, X2, X3, X4, X5, X6, X7, X8, Y1, Y2, Y3, Y4, Y5, Y6, Y7, Y8]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In08_Out10[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, X7 any, X8 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, Y6 any, Y7 any, Y8 any, Y9 any] interface { Run (X1, X2, X3, X4, X5, X6, X7, X8) (Y1, Y2, Y3, Y4, Y5, Y6, Y7, Y8, Y9, error) }
func GenRunResolver_In08_Out10[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, X7 any, X8 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, Y6 any, Y7 any, Y8 any, Y9 any, L genRunResolver_In08_Out10[X1, X2, X3, X4, X5, X6, X7, X8, Y1, Y2, Y3, Y4, Y5, Y6, Y7, Y8, Y9]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In08_Out11[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, X7 any, X8 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, Y6 any, Y7 any, Y8 any, Y9 any, Y10 any] interface { Run (X1, X2, X3, X4, X5, X6, X7, X8) (Y1, Y2, Y3, Y4, Y5, Y6, Y7, Y8, Y9, Y10, error) }
func GenRunResolver_In08_Out11[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, X7 any, X8 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, Y6 any, Y7 any, Y8 any, Y9 any, Y10 any, L genRunResolver_In08_Out11[X1, X2, X3, X4, X5, X6, X7, X8, Y1, Y2, Y3, Y4, Y5, Y6, Y7, Y8, Y9, Y10]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In09_Out01[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, X7 any, X8 any, X9 any] interface { Run (X1, X2, X3, X4, X5, X6, X7, X8, X9) (error) }
func GenRunResolver_In09_Out01[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, X7 any, X8 any, X9 any, L genRunResolver_In09_Out01[X1, X2, X3, X4, X5, X6, X7, X8, X9]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In09_Out02[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, X7 any, X8 any, X9 any, Y1 any] interface { Run (X1, X2, X3, X4, X5, X6, X7, X8, X9) (Y1, error) }
func GenRunResolver_In09_Out02[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, X7 any, X8 any, X9 any, Y1 any, L genRunResolver_In09_Out02[X1, X2, X3, X4, X5, X6, X7, X8, X9, Y1]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In09_Out03[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, X7 any, X8 any, X9 any, Y1 any, Y2 any] interface { Run (X1, X2, X3, X4, X5, X6, X7, X8, X9) (Y1, Y2, error) }
func GenRunResolver_In09_Out03[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, X7 any, X8 any, X9 any, Y1 any, Y2 any, L genRunResolver_In09_Out03[X1, X2, X3, X4, X5, X6, X7, X8, X9, Y1, Y2]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In09_Out04[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, X7 any, X8 any, X9 any, Y1 any, Y2 any, Y3 any] interface { Run (X1, X2, X3, X4, X5, X6, X7, X8, X9) (Y1, Y2, Y3, error) }
func GenRunResolver_In09_Out04[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, X7 any, X8 any, X9 any, Y1 any, Y2 any, Y3 any, L genRunResolver_In09_Out04[X1, X2, X3, X4, X5, X6, X7, X8, X9, Y1, Y2, Y3]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In09_Out05[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, X7 any, X8 any, X9 any, Y1 any, Y2 any, Y3 any, Y4 any] interface { Run (X1, X2, X3, X4, X5, X6, X7, X8, X9) (Y1, Y2, Y3, Y4, error) }
func GenRunResolver_In09_Out05[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, X7 any, X8 any, X9 any, Y1 any, Y2 any, Y3 any, Y4 any, L genRunResolver_In09_Out05[X1, X2, X3, X4, X5, X6, X7, X8, X9, Y1, Y2, Y3, Y4]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In09_Out06[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, X7 any, X8 any, X9 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any] interface { Run (X1, X2, X3, X4, X5, X6, X7, X8, X9) (Y1, Y2, Y3, Y4, Y5, error) }
func GenRunResolver_In09_Out06[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, X7 any, X8 any, X9 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, L genRunResolver_In09_Out06[X1, X2, X3, X4, X5, X6, X7, X8, X9, Y1, Y2, Y3, Y4, Y5]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In09_Out07[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, X7 any, X8 any, X9 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, Y6 any] interface { Run (X1, X2, X3, X4, X5, X6, X7, X8, X9) (Y1, Y2, Y3, Y4, Y5, Y6, error) }
func GenRunResolver_In09_Out07[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, X7 any, X8 any, X9 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, Y6 any, L genRunResolver_In09_Out07[X1, X2, X3, X4, X5, X6, X7, X8, X9, Y1, Y2, Y3, Y4, Y5, Y6]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In09_Out08[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, X7 any, X8 any, X9 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, Y6 any, Y7 any] interface { Run (X1, X2, X3, X4, X5, X6, X7, X8, X9) (Y1, Y2, Y3, Y4, Y5, Y6, Y7, error) }
func GenRunResolver_In09_Out08[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, X7 any, X8 any, X9 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, Y6 any, Y7 any, L genRunResolver_In09_Out08[X1, X2, X3, X4, X5, X6, X7, X8, X9, Y1, Y2, Y3, Y4, Y5, Y6, Y7]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In09_Out09[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, X7 any, X8 any, X9 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, Y6 any, Y7 any, Y8 any] interface { Run (X1, X2, X3, X4, X5, X6, X7, X8, X9) (Y1, Y2, Y3, Y4, Y5, Y6, Y7, Y8, error) }
func GenRunResolver_In09_Out09[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, X7 any, X8 any, X9 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, Y6 any, Y7 any, Y8 any, L genRunResolver_In09_Out09[X1, X2, X3, X4, X5, X6, X7, X8, X9, Y1, Y2, Y3, Y4, Y5, Y6, Y7, Y8]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In09_Out10[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, X7 any, X8 any, X9 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, Y6 any, Y7 any, Y8 any, Y9 any] interface { Run (X1, X2, X3, X4, X5, X6, X7, X8, X9) (Y1, Y2, Y3, Y4, Y5, Y6, Y7, Y8, Y9, error) }
func GenRunResolver_In09_Out10[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, X7 any, X8 any, X9 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, Y6 any, Y7 any, Y8 any, Y9 any, L genRunResolver_In09_Out10[X1, X2, X3, X4, X5, X6, X7, X8, X9, Y1, Y2, Y3, Y4, Y5, Y6, Y7, Y8, Y9]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In09_Out11[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, X7 any, X8 any, X9 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, Y6 any, Y7 any, Y8 any, Y9 any, Y10 any] interface { Run (X1, X2, X3, X4, X5, X6, X7, X8, X9) (Y1, Y2, Y3, Y4, Y5, Y6, Y7, Y8, Y9, Y10, error) }
func GenRunResolver_In09_Out11[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, X7 any, X8 any, X9 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, Y6 any, Y7 any, Y8 any, Y9 any, Y10 any, L genRunResolver_In09_Out11[X1, X2, X3, X4, X5, X6, X7, X8, X9, Y1, Y2, Y3, Y4, Y5, Y6, Y7, Y8, Y9, Y10]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In10_Out01[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, X7 any, X8 any, X9 any, X10 any] interface { Run (X1, X2, X3, X4, X5, X6, X7, X8, X9, X10) (error) }
func GenRunResolver_In10_Out01[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, X7 any, X8 any, X9 any, X10 any, L genRunResolver_In10_Out01[X1, X2, X3, X4, X5, X6, X7, X8, X9, X10]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In10_Out02[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, X7 any, X8 any, X9 any, X10 any, Y1 any] interface { Run (X1, X2, X3, X4, X5, X6, X7, X8, X9, X10) (Y1, error) }
func GenRunResolver_In10_Out02[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, X7 any, X8 any, X9 any, X10 any, Y1 any, L genRunResolver_In10_Out02[X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, Y1]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In10_Out03[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, X7 any, X8 any, X9 any, X10 any, Y1 any, Y2 any] interface { Run (X1, X2, X3, X4, X5, X6, X7, X8, X9, X10) (Y1, Y2, error) }
func GenRunResolver_In10_Out03[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, X7 any, X8 any, X9 any, X10 any, Y1 any, Y2 any, L genRunResolver_In10_Out03[X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, Y1, Y2]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In10_Out04[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, X7 any, X8 any, X9 any, X10 any, Y1 any, Y2 any, Y3 any] interface { Run (X1, X2, X3, X4, X5, X6, X7, X8, X9, X10) (Y1, Y2, Y3, error) }
func GenRunResolver_In10_Out04[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, X7 any, X8 any, X9 any, X10 any, Y1 any, Y2 any, Y3 any, L genRunResolver_In10_Out04[X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, Y1, Y2, Y3]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In10_Out05[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, X7 any, X8 any, X9 any, X10 any, Y1 any, Y2 any, Y3 any, Y4 any] interface { Run (X1, X2, X3, X4, X5, X6, X7, X8, X9, X10) (Y1, Y2, Y3, Y4, error) }
func GenRunResolver_In10_Out05[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, X7 any, X8 any, X9 any, X10 any, Y1 any, Y2 any, Y3 any, Y4 any, L genRunResolver_In10_Out05[X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, Y1, Y2, Y3, Y4]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In10_Out06[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, X7 any, X8 any, X9 any, X10 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any] interface { Run (X1, X2, X3, X4, X5, X6, X7, X8, X9, X10) (Y1, Y2, Y3, Y4, Y5, error) }
func GenRunResolver_In10_Out06[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, X7 any, X8 any, X9 any, X10 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, L genRunResolver_In10_Out06[X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, Y1, Y2, Y3, Y4, Y5]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In10_Out07[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, X7 any, X8 any, X9 any, X10 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, Y6 any] interface { Run (X1, X2, X3, X4, X5, X6, X7, X8, X9, X10) (Y1, Y2, Y3, Y4, Y5, Y6, error) }
func GenRunResolver_In10_Out07[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, X7 any, X8 any, X9 any, X10 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, Y6 any, L genRunResolver_In10_Out07[X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, Y1, Y2, Y3, Y4, Y5, Y6]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In10_Out08[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, X7 any, X8 any, X9 any, X10 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, Y6 any, Y7 any] interface { Run (X1, X2, X3, X4, X5, X6, X7, X8, X9, X10) (Y1, Y2, Y3, Y4, Y5, Y6, Y7, error) }
func GenRunResolver_In10_Out08[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, X7 any, X8 any, X9 any, X10 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, Y6 any, Y7 any, L genRunResolver_In10_Out08[X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, Y1, Y2, Y3, Y4, Y5, Y6, Y7]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In10_Out09[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, X7 any, X8 any, X9 any, X10 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, Y6 any, Y7 any, Y8 any] interface { Run (X1, X2, X3, X4, X5, X6, X7, X8, X9, X10) (Y1, Y2, Y3, Y4, Y5, Y6, Y7, Y8, error) }
func GenRunResolver_In10_Out09[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, X7 any, X8 any, X9 any, X10 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, Y6 any, Y7 any, Y8 any, L genRunResolver_In10_Out09[X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, Y1, Y2, Y3, Y4, Y5, Y6, Y7, Y8]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In10_Out10[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, X7 any, X8 any, X9 any, X10 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, Y6 any, Y7 any, Y8 any, Y9 any] interface { Run (X1, X2, X3, X4, X5, X6, X7, X8, X9, X10) (Y1, Y2, Y3, Y4, Y5, Y6, Y7, Y8, Y9, error) }
func GenRunResolver_In10_Out10[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, X7 any, X8 any, X9 any, X10 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, Y6 any, Y7 any, Y8 any, Y9 any, L genRunResolver_In10_Out10[X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, Y1, Y2, Y3, Y4, Y5, Y6, Y7, Y8, Y9]](l L) TypedRunner[L] { return &rund[L]{l} }

type genRunResolver_In10_Out11[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, X7 any, X8 any, X9 any, X10 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, Y6 any, Y7 any, Y8 any, Y9 any, Y10 any] interface { Run (X1, X2, X3, X4, X5, X6, X7, X8, X9, X10) (Y1, Y2, Y3, Y4, Y5, Y6, Y7, Y8, Y9, Y10, error) }
func GenRunResolver_In10_Out11[X1 any, X2 any, X3 any, X4 any, X5 any, X6 any, X7 any, X8 any, X9 any, X10 any, Y1 any, Y2 any, Y3 any, Y4 any, Y5 any, Y6 any, Y7 any, Y8 any, Y9 any, Y10 any, L genRunResolver_In10_Out11[X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, Y1, Y2, Y3, Y4, Y5, Y6, Y7, Y8, Y9, Y10]](l L) TypedRunner[L] { return &rund[L]{l} }

